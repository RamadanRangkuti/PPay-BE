basePath: /
definitions:
  dto.LoginDTO:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.RegisterDTO:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.UpdateUserRequest:
    properties:
      email:
        type: string
      fullname:
        type: string
      image:
        type: string
      phone:
        type: string
      pin:
        maxLength: 6
        minLength: 6
        type: string
      updatedAt:
        type: string
    type: object
  dto.UserSummaryDTO:
    properties:
      email:
        type: string
      fullname:
        type: string
      id:
        type: integer
      image:
        type: string
      phone:
        type: string
    type: object
  lib.PageInfo:
    properties:
      currentPage:
        type: integer
      nextPage:
        type: integer
      prevPage:
        type: integer
      totalData:
        type: integer
      totalPage:
        type: integer
    type: object
  lib.Response:
    properties:
      data: {}
      error: {}
      message:
        type: string
      pageInfo:
        $ref: '#/definitions/lib.PageInfo'
      status:
        type: integer
    type: object
info:
  contact: {}
  description: This is example for server P-Pay Aplication
  title: Backend P-Pay
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Login Account
      parameters:
      - description: Input Email
        in: formData
        name: email
        required: true
        type: string
      - description: Input Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginDTO'
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Registrasi Account
      parameters:
      - description: Input Email
        in: formData
        name: email
        required: true
        type: string
      - description: Input Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RegisterDTO'
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: Get All Users
      parameters:
      - description: Search Users
        in: query
        name: search
        type: string
      - description: Page Users
        in: query
        name: page
        type: integer
      - description: Limit Users
        in: query
        name: limit
        type: integer
      - description: Sort Users
        in: query
        name: sort
        type: string
      - description: Order Users
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/lib.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.UserSummaryDTO'
                  type: array
                pageInfo:
                  $ref: '#/definitions/lib.PageInfo'
              type: object
      summary: Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: This API endpoint is used to create a new user and their wallet.
      parameters:
      - description: Full Name
        in: formData
        name: fullname
        required: true
        type: string
      - description: Email Address
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: PIN (6-digit)
        in: formData
        name: pin
        required: true
        type: string
      - description: Phone Number
        in: formData
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserSummaryDTO'
      summary: Add User
      tags:
      - Users
  /users/{id}:
    patch:
      consumes:
      - multipart/form-data
      description: Update Movies
      parameters:
      - description: Update Full Name
        in: formData
        name: fullname
        type: string
      - description: Update Email
        in: formData
        name: email
        type: string
      - description: Update Password
        in: formData
        name: password
        type: string
      - description: Update Pin
        in: formData
        name: pin
        type: string
      - description: Update Phone
        in: formData
        name: phone
        type: string
      - description: Update Image
        in: formData
        name: image
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/lib.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateUserRequest'
              type: object
      security:
      - ApiKeyAuth: []
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
